import os
import uuid
import logging
from flask import Flask, request
from telegram import (
    Bot, Update,
    InlineKeyboardButton, InlineKeyboardMarkup
)
from telegram.ext import Dispatcher, CommandHandler, CallbackQueryHandler
from apscheduler.schedulers.background import BackgroundScheduler
from pytz import utc

# –¢–æ–∫–µ–Ω—ã
TELEGRAM_TOKEN = os.environ.get("TOKEN")
LAVA_JWT = os.environ.get("LAVA_JWT")
CONTENT_LINK = "https://drive.google.com/drive/folders/1Bv8vEMKYJq2N-MojB--UVdj5ihrSrWm9?usp=sharing"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞
app = Flask(__name__)
bot = Bot(token=TELEGRAM_TOKEN)
dispatcher = Dispatcher(bot, update_queue=None, use_context=True)
logging.basicConfig(level=logging.INFO)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ
invoices = {}
MIN_AMOUNT = 0.15

@app.route("/")
def home():
    return "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route(f"/{TELEGRAM_TOKEN}", methods=["POST"])
def telegram_webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return "OK", 200

@app.route("/lava_webhook", methods=["POST"])
def lava_webhook():
    data = request.json
    headers = request.headers
    order_id = data.get("order_id")
    status = data.get("status")

    logging.info(f"üåã Webhook: {data}")

    if status == "success" and order_id in invoices:
        user_id = invoices[order_id]
        bot.send_message(chat_id=user_id, text=f"üéâ –°–ø–∞—Å–∏–±–æ! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª:\n{CONTENT_LINK}")
        del invoices[order_id]

    return "OK", 200

# /start
def start(update, context):
    user = update.message.from_user
    keyboard = [
        [InlineKeyboardButton("üíµ –û–ü–õ–ê–¢–ò–¢–¨", callback_data="pay_select")],
        [InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data="check_payment")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text(
        "üí∏ –í—ã–≤–æ–¥ –∑–∞ –Ω–µ–¥–µ–ª—é ‚Äî $1 250\n"
        "–ë–µ–∑ –ª–∏—Ü–∞.\n"
        "–ë–µ–∑ –ø—É–±–ª–∏—á–Ω–æ—Å—Ç–∏.\n"
        "–ü—Ä–∏ —Ç—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç–∞—Ö ~30 –º–∏–Ω –≤ –¥–µ–Ω—å."
    )

    with open("kaspi.jpg", "rb") as photo:
        bot.send_photo(chat_id=update.message.chat_id, photo=photo)

    context.bot.send_message(
        chat_id=update.message.chat_id,
        reply_markup=reply_markup,
        text=(
            "\n–û–¥–∏–Ω –æ–±—Ä–∞–∑.\n"
            "–ß—ë—Ç–∫–∞—è –ø–æ–¥–∞—á–∞.\n"
            "–ò —Å–∏—Å—Ç–µ–º–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –∫–∞–∂–¥—ã–π —à–∞–≥ —É–∂–µ —Ä–∞—Å–ø–∏—Å–∞–Ω.\n\n"
            "–¢—ã —Å–æ–∑–¥–∞—ë—à—å –º–æ–¥–µ–ª—å,\n"
            "–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—à—å –≤–∏–∑—É–∞–ª,\n"
            "–æ—Ç–≤–µ—á–∞–µ—à—å –ø–æ –≥–æ—Ç–æ–≤—ã–º —à–∞–±–ª–æ–Ω–∞–º\n"
            "‚Äî –∏ –º–æ–Ω–µ—Ç–∏–∑–∏—Ä—É–µ—à—å –≤–Ω–∏–º–∞–Ω–∏–µ.\n\n"
            "üìå –≠—Ç–æ –∏ –µ—Å—Ç—å AI Girl 2.0\n\n"
            "ü§ñ AI Girl 2.0 ‚Äî —Å–≤—è–∑–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–æ—Å–∏—Ç –¥–µ–Ω—å–≥–∏\n"
            "–≠—Ç–æ –ø–æ—à–∞–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞:\n"
            "üë© –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏\n"
            "üì∏ AI-–æ–±—Ä–∞–∑—ã –∏ –ø–æ–¥–∞—á–∞\n"
            "üí∏ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–Ω–∞—Ç–æ–≤\n\n"
            "–¢—ã –ø–æ–ª—É—á–∞–µ—à—å:\n"
            "‚Ä¢ –ü–æ–ª–Ω—ã–π –ø–ª–∞–Ω –∑–∞–ø—É—Å–∫–∞\n"
            "‚Ä¢ –í—Å–µ –Ω—É–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\n"
            "‚Ä¢ –®–∞–±–ª–æ–Ω—ã –æ–±—â–µ–Ω–∏—è\n"
            "‚Ä¢ –°–ø–æ—Å–æ–± –ø—Ä–∏—ë–º–∞ –æ–ø–ª–∞—Ç—ã\n\n"
            "–í—Å—ë —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ. –ü—Ä–æ—Å—Ç–æ –¥–µ–π—Å—Ç–≤—É–π –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n\n"
            "üí∏ –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø:\n"
            "–ó–∞–∫—Ä—ã—Ç—ã–π –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ‚Äî $0.15\n\n"
            "1‚É£ –ù–∞–∂–º–∏ [–û–ü–õ–ê–¢–ò–¢–¨] –∏ —Å–¥–µ–ª–∞–π –ø–µ—Ä–µ–≤–æ–¥\n"
            "2‚É£ –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —É–∫–∞–∂–∏ —Å–≤–æ–π @username –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ\n"
            "3‚É£ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏ [‚úÖ —è –æ–ø–ª–∞—Ç–∏–ª]\n"
            "4‚É£ –ü–æ–ª—É—á–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª"
        )
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
def handle_button(update, context):
    query = update.callback_query
    user = query.from_user
    data = query.data

    if data == "pay_select":
        keyboard = [
            [InlineKeyboardButton("üá∑üá∫ –†–æ—Å—Å–∏—è (–ÆMoney)", url="https://yoomoney.ru/to/4100116270792125")],
            [InlineKeyboardButton("üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω (Lava)", callback_data="pay_lava")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_main")]
        ]
        query.message.reply_text("–í—ã–±–µ—Ä–∏ —Å—Ç—Ä–∞–Ω—É –¥–ª—è –æ–ø–ª–∞—Ç—ã:", reply_markup=InlineKeyboardMarkup(keyboard))

    elif data == "pay_lava":
        order_id = str(uuid.uuid4())
        invoices[order_id] = user.id

        import requests
        response = requests.post(
            "https://api.lava.kz/invoice/create",
            json={
                "amount": "70",  # –í —Ç–µ–Ω–≥–µ
                "order_id": order_id,
                "comment": f"@{user.username or 'no_username'}",
                "custom_fields": {}
            },
            headers={"Authorization": f"Bearer {LAVA_JWT}"}
        )

        pay_url = response.json().get("data", {}).get("url")
        if pay_url:
            bot.send_message(chat_id=user.id, text=f"üîó –í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É (KZ):\n{pay_url}")
        else:
            bot.send_message(chat_id=user.id, text="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—á—ë—Ç —á–µ—Ä–µ–∑ Lava. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

    elif data == "check_payment":
        bot.send_message(chat_id=user.id, text="‚è≥ –û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞...\n–ï—Å–ª–∏ —Ç—ã —Ç–æ—á–Ω–æ –æ–ø–ª–∞—Ç–∏–ª ‚Äî –æ–Ω–æ —Å–∫–æ—Ä–æ –ø—Ä–∏–ª–µ—Ç–∏—Ç.\n\n–ï—Å–ª–∏ –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç ‚Äî –Ω–∞–ø–∏—à–∏ –≤—Ä—É—á–Ω—É—é.")

    elif data == "back_main":
        start(update, context)

# –û—á–∏—Å—Ç–∫–∞
def clear_invoices():
    invoices.clear()
    logging.info("üßπ –û—á–∏—â–µ–Ω—ã –æ–∂–∏–¥–∞—é—â–∏–µ —Å—á–µ—Ç–∞")

scheduler = BackgroundScheduler(timezone=utc)
scheduler.add_job(clear_invoices, "interval", hours=6)
scheduler.start()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(CallbackQueryHandler(handle_button))

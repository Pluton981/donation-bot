import logging
import os
from flask import Flask, request
from telegram import Bot, Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Dispatcher, CommandHandler, CallbackQueryHandler

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.environ.get("TOKEN")

if not TOKEN:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è 'TOKEN' –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")

bot = Bot(token=TOKEN)
app = Flask(__name__)
dispatcher = Dispatcher(bot, update_queue=None, use_context=True)
logging.basicConfig(level=logging.INFO)

donations = []
MIN_AMOUNT = 0.15
CONTENT_LINK = "https://drive.google.com/drive/folders/18OEeQ4QhgHEDWac1RJz0PY8EoJVZbGH_?usp=drive_link"
DONATE_URL = "https://www.donationalerts.com/r/archive_unlock?v=2"

@app.route('/')
def home():
    return '‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç'

@app.route("/webhook", methods=["POST"])
def webhook():
    data = request.json
    if data and 'username' in data and 'amount' in data:
        username = data['username']
        amount = float(data['amount'])
        donations.append({'username': username.lower(), 'amount': amount})
        logging.info(f"üí∏ –ù–æ–≤—ã–π –¥–æ–Ω–∞—Ç: {username} ‚Äî {amount} USD")
    return "OK", 200

def start(update, context):
    keyboard = [[InlineKeyboardButton("üí≥ –û–ü–õ–ê–¢–ò–¢–¨", url=DONATE_URL)],
                [InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data="check_payment")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    intro_text = (
        "üí∏ –í—ã–≤–æ–¥ –∑–∞ –Ω–µ–¥–µ–ª—é ‚Äî $1 250\n"
        "–ë–µ–∑ –ª–∏—Ü–∞.\n"
        "–ë–µ–∑ –ø—É–±–ª–∏—á–Ω–æ—Å—Ç–∏.\n"
        "–ü—Ä–∏ —Ç—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç–∞—Ö ~30 –º–∏–Ω –≤ –¥–µ–Ω—å."
    )

    update.message.reply_text(intro_text)

    with open("kaspi.jpg", "rb") as photo:
        context.bot.send_photo(chat_id=update.message.chat_id, photo=photo)

    main_text = (
        "–û–¥–∏–Ω –æ–±—Ä–∞–∑.\n"
        "–ß—ë—Ç–∫–∞—è –ø–æ–¥–∞—á–∞.\n"
        "–ò —Å–∏—Å—Ç–µ–º–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –∫–∞–∂–¥—ã–π —à–∞–≥ —É–∂–µ —Ä–∞—Å–ø–∏—Å–∞–Ω.\n\n"
        "–¢—ã —Å–æ–∑–¥–∞—ë—à—å –º–æ–¥–µ–ª—å,\n"
        "–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—à—å –≤–∏–∑—É–∞–ª,\n"
        "–æ—Ç–≤–µ—á–∞–µ—à—å –ø–æ –≥–æ—Ç–æ–≤—ã–º —à–∞–±–ª–æ–Ω–∞–º\n"
        "‚Äî –∏ –º–æ–Ω–µ—Ç–∏–∑–∏—Ä—É–µ—à—å –≤–Ω–∏–º–∞–Ω–∏–µ.\n\n"
        "üìå –≠—Ç–æ –∏ –µ—Å—Ç—å AI Girl 2.0\n\n"
        "ü§ñ AI Girl 2.0 ‚Äî —Å–≤—è–∑–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–æ—Å–∏—Ç –¥–µ–Ω—å–≥–∏\n"
        "–≠—Ç–æ –ø–æ—à–∞–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞:\n"
        "üë© –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏\n"
        "üì∏ AI-–æ–±—Ä–∞–∑—ã –∏ –ø–æ–¥–∞—á–∞\n"
        "üí∏ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–Ω–∞—Ç–æ–≤\n\n"
        "–¢—ã –ø–æ–ª—É—á–∞–µ—à—å:\n"
        "‚Ä¢ –ü–æ–ª–Ω—ã–π –ø–ª–∞–Ω –∑–∞–ø—É—Å–∫–∞\n"
        "‚Ä¢ –í—Å–µ –Ω—É–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\n"
        "‚Ä¢ –®–∞–±–ª–æ–Ω—ã –æ–±—â–µ–Ω–∏—è\n"
        "‚Ä¢ –°–ø–æ—Å–æ–± –ø—Ä–∏—ë–º–∞ –æ–ø–ª–∞—Ç—ã\n\n"
        "–í—Å—ë —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ. –ü—Ä–æ—Å—Ç–æ –¥–µ–π—Å—Ç–≤—É–π –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n\n"
        "üíµ –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø:\n"
        "–ó–∞–∫—Ä—ã—Ç—ã–π –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ‚Äî $20\n\n"
        "1Ô∏è‚É£ –ù–∞–∂–º–∏ [–û–ü–õ–ê–¢–ò–¢–¨] –∏ —Å–¥–µ–ª–∞–π –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ $20\n"
        "2Ô∏è‚É£ –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —É–∫–∞–∂–∏ —Å–≤–æ–π @username –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ\n"
        "3Ô∏è‚É£ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏ [‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª]\n"
        "4Ô∏è‚É£ –ü–æ–ª—É—á–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª"
    )

    update.message.reply_text(main_text, reply_markup=reply_markup)

def check_payment(update, context):
    query = update.callback_query
    user = query.from_user
    username = user.username.lower() if user.username else ""

    for donation in donations:
        if username in donation['username'] and donation['amount'] >= MIN_AMOUNT:
            query.message.reply_text(f"üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –í–æ—Ç —Ç–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç:\n{CONTENT_LINK}")
            return

    query.message.reply_text("‚ùå –î–æ–Ω–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–∫–∞–∂–∏ @username –∏ —Å—É–º–º—É –æ—Ç $20.")

dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(CallbackQueryHandler(check_payment))

@app.route(f"/{TOKEN}", methods=["POST"])
def telegram_webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return "OK", 200

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=10000)

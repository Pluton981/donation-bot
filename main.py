import logging
import os
import requests
from flask import Flask, request
from telegram import Bot, Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Dispatcher, CommandHandler, CallbackQueryHandler
from apscheduler.schedulers.background import BackgroundScheduler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.environ.get("TOKEN")
DA_SECRET = os.environ.get("DA_SECRET")

if not TELEGRAM_TOKEN or not DA_SECRET:
    raise ValueError("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç TELEGRAM TOKEN –∏–ª–∏ DA TOKEN")

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
DONATE_LINK = "https://www.donationalerts.com/r/archive_unlock?v=2"
KASPI_IMAGE = "kaspi.jpg"
MIN_AMOUNT = 0.15  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–æ–Ω–∞—Ç –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö
CONTENT_LINK = "https://drive.google.com/drive/folders/18OEeQ4QhgHEDWac1RJz0PY8EoJVZbGH_?usp=drive_link"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask –∏ Telegram
app = Flask(__name__)
bot = Bot(token=TELEGRAM_TOKEN)
dispatcher = Dispatcher(bot=bot, update_queue=None, use_context=True)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–æ–Ω–∞—Ç–æ–≤
donations = []

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route('/')
def index():
    return '‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!'

# Webhook –æ—Ç DonationAlerts
@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.json
    if data:
        username = data.get("username", "").lower().replace("@", "")
        amount = float(data.get("amount", 0))
        currency = data.get("currency", "RUB")

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ USD –ø–æ —Ç–µ–∫—É—â–µ–º—É –∫—É—Ä—Å—É (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        if currency == "RUB":
            try:
                rate = requests.get("https://api.exchangerate.host/latest?base=RUB&symbols=USD").json()["rates"]["USD"]
                amount *= rate
            except Exception as e:
                logger.warning(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞: {e}")
                return "Exchange error", 500

        donations.append({"username": username, "amount": amount})
        logger.info(f"üí∏ –ù–æ–≤—ã–π –¥–æ–Ω–∞—Ç: {username} ‚Äî {amount:.2f} USD")

    return "OK", 200

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
def start(update, context):
    user = update.message.from_user
    username = user.username or "–¥—Ä—É–≥"

    title = f"üëã –ü—Ä–∏–≤–µ—Ç, @{username}!\n\n"
    part1 = (
        "üí∏ –í—ã–≤–æ–¥ –∑–∞ –Ω–µ–¥–µ–ª—é ‚Äî $1 250\n"
        "–ë–µ–∑ –ª–∏—Ü–∞.\n"
        "–ë–µ–∑ –ø—É–±–ª–∏—á–Ω–æ—Å—Ç–∏.\n"
        "–ü—Ä–∏ —Ç—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç–∞—Ö ~30 –º–∏–Ω –≤ –¥–µ–Ω—å.\n"
    )
    part2 = (
        "\n–û–¥–∏–Ω –æ–±—Ä–∞–∑.\n"
        "–ß—ë—Ç–∫–∞—è –ø–æ–¥–∞—á–∞.\n"
        "–ò —Å–∏—Å—Ç–µ–º–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –∫–∞–∂–¥—ã–π —à–∞–≥ —É–∂–µ —Ä–∞—Å–ø–∏—Å–∞–Ω.\n\n"
        "–¢—ã —Å–æ–∑–¥–∞—ë—à—å –º–æ–¥–µ–ª—å,\n"
        "–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—à—å –≤–∏–∑—É–∞–ª,\n"
        "–æ—Ç–≤–µ—á–∞–µ—à—å –ø–æ –≥–æ—Ç–æ–≤—ã–º —à–∞–±–ª–æ–Ω–∞–º\n"
        "‚Äî –∏ –º–æ–Ω–µ—Ç–∏–∑–∏—Ä—É–µ—à—å –≤–Ω–∏–º–∞–Ω–∏–µ.\n\n"
        "üìå –≠—Ç–æ –∏ –µ—Å—Ç—å AI Girl 2.0\n\n"
        "ü§ñ AI Girl 2.0 ‚Äî —Å–≤—è–∑–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–æ—Å–∏—Ç –¥–µ–Ω—å–≥–∏\n"
        "–≠—Ç–æ –ø–æ—à–∞–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞:\n"
        "üë© –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏\n"
        "üì∏ AI-–æ–±—Ä–∞–∑—ã –∏ –ø–æ–¥–∞—á–∞\n"
        "üí∏ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–Ω–∞—Ç–æ–≤\n\n"
        "–¢—ã –ø–æ–ª—É—á–∞–µ—à—å:\n"
        "‚Ä¢ –ü–æ–ª–Ω—ã–π –ø–ª–∞–Ω –∑–∞–ø—É—Å–∫–∞\n"
        "‚Ä¢ –í—Å–µ –Ω—É–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\n"
        "‚Ä¢ –®–∞–±–ª–æ–Ω—ã –æ–±—â–µ–Ω–∏—è\n"
        "‚Ä¢ –°–ø–æ—Å–æ–± –ø—Ä–∏—ë–º–∞ –æ–ø–ª–∞—Ç—ã\n\n"
        "–í—Å—ë —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ. –ü—Ä–æ—Å—Ç–æ –¥–µ–π—Å—Ç–≤—É–π –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n\n"
        "üíµ –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø:\n"
        "–ó–∞–∫—Ä—ã—Ç—ã–π –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ‚Äî $20\n\n"
        "1Ô∏è‚É£ –ù–∞–∂–º–∏ [–û–ü–õ–ê–¢–ò–¢–¨] –∏ —Å–¥–µ–ª–∞–π –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ $20\n"
        "2Ô∏è‚É£ –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —É–∫–∞–∂–∏ —Å–≤–æ–π @username –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ\n"
        "3Ô∏è‚É£ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏ [‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª]\n"
        "4Ô∏è‚É£ –ü–æ–ª—É—á–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª"
    )

    keyboard = [
        [InlineKeyboardButton("üí∏ –û–ü–õ–ê–¢–ò–¢–¨", url=DONATE_LINK)],
        [InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data="check_payment")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text(title + part1)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–Ω–∞
    try:
        with open(KASPI_IMAGE, 'rb') as photo:
            context.bot.send_photo(chat_id=update.effective_chat.id, photo=photo)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–∫—Ä–∏–Ω–∞: {e}")

    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=part2,
        reply_markup=reply_markup
    )

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–Ω–∞—Ç–∞
def check_payment(update, context):
    query = update.callback_query
    username = (query.from_user.username or "").lower().replace("@", "")

    for donation in donations:
        if username in donation["username"] and donation["amount"] >= MIN_AMOUNT:
            query.message.reply_text(f"‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –í–æ—Ç —Ç–≤–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª:\n{CONTENT_LINK}")
            return

    query.message.reply_text("‚ùå –î–æ–Ω–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —É–∫–∞–∑–∞–ª —Å–≤–æ–π @username –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —Å—É–º–º–∞ –æ—Ç $0.15.")

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(CallbackQueryHandler(check_payment))

# Webhook –æ—Ç Telegram
@app.route(f"/{TELEGRAM_TOKEN}", methods=["POST"])
def telegram_webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return "OK", 200

# –ê–≤—Ç–æ—Å–±—Ä–æ—Å –¥–æ–Ω–∞—Ç–æ–≤ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
def clear_donations():
    donations.clear()
    logger.info("üßπ –°–ø–∏—Å–æ–∫ –¥–æ–Ω–∞—Ç–æ–≤ –æ—á–∏—â–µ–Ω")

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
scheduler = BackgroundScheduler()
scheduler.add_job(clear_donations, "interval", hours=12)
scheduler.start()

# –ó–∞–ø—É—Å–∫ Flask
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)

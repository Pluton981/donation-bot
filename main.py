import os
import logging
from flask import Flask, request
from telegram import Bot, Update, InputMediaPhoto
from telegram.ext import CommandHandler, Dispatcher
from telegram.utils.request import Request
from threading import Thread

TOKEN = os.environ.get("TOKEN")
DA_SECRET = os.environ.get("DA_SECRET")

if not TOKEN or not DA_SECRET:
    raise ValueError("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç TELEGRAM TOKEN –∏–ª–∏ DA TOKEN")

bot = Bot(token=TOKEN)
app = Flask(__name__)
logging.basicConfig(level=logging.INFO)

dispatcher = Dispatcher(bot=bot, update_queue=None, workers=1, use_context=True)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ chat_id –ø–æ username
user_data = {}

@app.route('/')
def home():
    return '‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç'

@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.json
    username = data.get("username", "").lower().replace("@", "")
    amount = data.get("amount")

    logging.info(f"üí∏ –ù–æ–≤—ã–π –¥–æ–Ω–∞—Ç: {username} ‚Äî {amount} USD")

    if username in user_data:
        chat_id = user_data[username]
        bot.send_message(chat_id=chat_id, text="üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –í–æ—Ç —Ç–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç: https://drive.google.com/drive/folders/18OEeQ4QhgHEDWac1RJz0PY8EoJVZbGH_?usp=drive_link")
    else:
        logging.warning(f"‚ùó –ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å username @{username}")

    return 'ok'

def start(update: Update, context):
    username = update.message.from_user.username.lower()
    chat_id = update.message.chat_id
    user_data[username] = chat_id

    with open("kaspi.jpg", "rb") as photo:
        context.bot.send_photo(chat_id=chat_id, photo=photo)

    context.bot.send_message(
        chat_id=chat_id,
        text=(
            "üí∏ –í—ã–≤–æ–¥ –∑–∞ –Ω–µ–¥–µ–ª—é ‚Äî $1 250\n"
            "–ë–µ–∑ –ª–∏—Ü–∞.\n"
            "–ë–µ–∑ –ø—É–±–ª–∏—á–Ω–æ—Å—Ç–∏.\n"
            "–ü—Ä–∏ —Ç—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç–∞—Ö ~30 –º–∏–Ω –≤ –¥–µ–Ω—å.\n\n"
            "–û–¥–∏–Ω –æ–±—Ä–∞–∑.\n"
            "–ß—ë—Ç–∫–∞—è –ø–æ–¥–∞—á–∞.\n"
            "–ò —Å–∏—Å—Ç–µ–º–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –∫–∞–∂–¥—ã–π —à–∞–≥ —É–∂–µ —Ä–∞—Å–ø–∏—Å–∞–Ω.\n\n"
            "–¢—ã —Å–æ–∑–¥–∞—ë—à—å –º–æ–¥–µ–ª—å,\n"
            "–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—à—å –≤–∏–∑—É–∞–ª,\n"
            "–æ—Ç–≤–µ—á–∞–µ—à—å –ø–æ –≥–æ—Ç–æ–≤—ã–º —à–∞–±–ª–æ–Ω–∞–º\n"
            "‚Äî –∏ –º–æ–Ω–µ—Ç–∏–∑–∏—Ä—É–µ—à—å –≤–Ω–∏–º–∞–Ω–∏–µ.\n\n"
            "üìå –≠—Ç–æ –∏ –µ—Å—Ç—å AI Girl 2.0\n\n"
            "ü§ñ AI Girl 2.0 ‚Äî —Å–≤—è–∑–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–æ—Å–∏—Ç –¥–µ–Ω—å–≥–∏\n"
            "–≠—Ç–æ –ø–æ—à–∞–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞:\n"
            "üë© –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏\n"
            "üì∏ AI-–æ–±—Ä–∞–∑—ã –∏ –ø–æ–¥–∞—á–∞\n"
            "üí∏ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–Ω–∞—Ç–æ–≤\n\n"
            "–¢—ã –ø–æ–ª—É—á–∞–µ—à—å:\n"
            "‚Ä¢ –ü–æ–ª–Ω—ã–π –ø–ª–∞–Ω –∑–∞–ø—É—Å–∫–∞\n"
            "‚Ä¢ –í—Å–µ –Ω—É–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\n"
            "‚Ä¢ –®–∞–±–ª–æ–Ω—ã –æ–±—â–µ–Ω–∏—è\n"
            "‚Ä¢ –°–ø–æ—Å–æ–± –ø—Ä–∏—ë–º–∞ –æ–ø–ª–∞—Ç—ã\n\n"
            "–í—Å—ë —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ. –ü—Ä–æ—Å—Ç–æ –¥–µ–π—Å—Ç–≤—É–π –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n\n"
            "üíµ –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø:\n"
            "–ó–∞–∫—Ä—ã—Ç—ã–π –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ‚Äî $20\n\n"
            "1Ô∏è‚É£ –ù–∞–∂–º–∏ [–û–ü–õ–ê–¢–ò–¢–¨](https://www.donationalerts.com/r/archive_unlock?v=2) –∏ —Å–¥–µ–ª–∞–π –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ $20\n"
            "2Ô∏è‚É£ –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —É–∫–∞–∂–∏ —Å–≤–æ–π @username –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ\n"
            "3Ô∏è‚É£ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏ [‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª]\n"
            "4Ô∏è‚É£ –ü–æ–ª—É—á–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª"
        ),
        parse_mode='Markdown'
    )

dispatcher.add_handler(CommandHandler("start", start))

def run_telegram():
    from telegram.ext import Updater
    updater = Updater(token=TOKEN, use_context=True)
    updater.dispatcher.add_handler(CommandHandler("start", start))
    updater.start_polling()

Thread(target=run_telegram).start()

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 10000))
    app.run(host='0.0.0.0', port=port)
